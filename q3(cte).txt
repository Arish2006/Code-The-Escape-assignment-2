/**
 * @input A : Integer array
 * @input n1 : Integer array's ( A ) length
 * @input B : Integer
 * 
 * @Output Integer
 */
 int second(const int*A,int l,int r,int B){
    while(l<=r){
        int m=l+(r-l)/2;
        if(A[m]==B){
            return m;
        }
        else if(A[m]<B){
            l=m+1;
        }
        else{
            r=m-1;
        }
    }
    return -1;
}

int first(const int*A,int l,int r,int B){
    while(l<=r){
        int m=l+(r-l)/2;
        if(A[m]==B){
            return m;
        }
        else if(A[m]>B){
            l=m+1;
        }
        else{
            r=m-1;
        }
    }
    return -1;
}

int Peak(const int*A,int n){
    int l=0,r=n-1;
    while(l<r){
        int m=l+(r-l)/2;
        if(A[m]<A[m+1]){
            l=m+1;
        }
        else{
            r=m;
        }
    }
    return l;
}
int solve(int* A, int n1, int B) {
    int p=Peak(A,n1);
    int idx=second(A,0,p,B);
    if(idx!=-1)return idx;
    return first(A,p+1,n1-1,B);
}





